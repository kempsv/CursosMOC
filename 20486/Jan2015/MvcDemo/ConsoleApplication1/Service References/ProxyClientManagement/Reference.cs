//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ConsoleApplication1.ProxyClientManagement {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BaseEntity", Namespace="http://schemas.datacontract.org/2004/07/MvcDemo.Model.Entities")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ConsoleApplication1.ProxyClientManagement.Cliente))]
    public partial class BaseEntity : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Cliente", Namespace="http://schemas.datacontract.org/2004/07/MvcDemo.Model.Entities")]
    [System.SerializableAttribute()]
    public partial class Cliente : ConsoleApplication1.ProxyClientManagement.BaseEntity {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EnderecoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdadeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NomeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Endereco {
            get {
                return this.EnderecoField;
            }
            set {
                if ((object.ReferenceEquals(this.EnderecoField, value) != true)) {
                    this.EnderecoField = value;
                    this.RaisePropertyChanged("Endereco");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Idade {
            get {
                return this.IdadeField;
            }
            set {
                if ((this.IdadeField.Equals(value) != true)) {
                    this.IdadeField = value;
                    this.RaisePropertyChanged("Idade");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Nome {
            get {
                return this.NomeField;
            }
            set {
                if ((object.ReferenceEquals(this.NomeField, value) != true)) {
                    this.NomeField = value;
                    this.RaisePropertyChanged("Nome");
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ProxyClientManagement.IClientManagementService")]
    public interface IClientManagementService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICrudCommonServiceOf_Cliente/Add", ReplyAction="http://tempuri.org/ICrudCommonServiceOf_Cliente/AddResponse")]
        void Add(ConsoleApplication1.ProxyClientManagement.Cliente entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICrudCommonServiceOf_Cliente/Add", ReplyAction="http://tempuri.org/ICrudCommonServiceOf_Cliente/AddResponse")]
        System.Threading.Tasks.Task AddAsync(ConsoleApplication1.ProxyClientManagement.Cliente entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICrudCommonServiceOf_Cliente/Update", ReplyAction="http://tempuri.org/ICrudCommonServiceOf_Cliente/UpdateResponse")]
        void Update(ConsoleApplication1.ProxyClientManagement.Cliente entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICrudCommonServiceOf_Cliente/Update", ReplyAction="http://tempuri.org/ICrudCommonServiceOf_Cliente/UpdateResponse")]
        System.Threading.Tasks.Task UpdateAsync(ConsoleApplication1.ProxyClientManagement.Cliente entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICrudCommonServiceOf_Cliente/Delete", ReplyAction="http://tempuri.org/ICrudCommonServiceOf_Cliente/DeleteResponse")]
        void Delete(ConsoleApplication1.ProxyClientManagement.Cliente entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICrudCommonServiceOf_Cliente/Delete", ReplyAction="http://tempuri.org/ICrudCommonServiceOf_Cliente/DeleteResponse")]
        System.Threading.Tasks.Task DeleteAsync(ConsoleApplication1.ProxyClientManagement.Cliente entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICrudCommonServiceOf_Cliente/FindAll", ReplyAction="http://tempuri.org/ICrudCommonServiceOf_Cliente/FindAllResponse")]
        System.Collections.Generic.List<ConsoleApplication1.ProxyClientManagement.Cliente> FindAll();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICrudCommonServiceOf_Cliente/FindAll", ReplyAction="http://tempuri.org/ICrudCommonServiceOf_Cliente/FindAllResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<ConsoleApplication1.ProxyClientManagement.Cliente>> FindAllAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICrudCommonServiceOf_Cliente/FindByGuid", ReplyAction="http://tempuri.org/ICrudCommonServiceOf_Cliente/FindByGuidResponse")]
        ConsoleApplication1.ProxyClientManagement.Cliente FindByGuid(string guid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICrudCommonServiceOf_Cliente/FindByGuid", ReplyAction="http://tempuri.org/ICrudCommonServiceOf_Cliente/FindByGuidResponse")]
        System.Threading.Tasks.Task<ConsoleApplication1.ProxyClientManagement.Cliente> FindByGuidAsync(string guid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICrudCommonServiceOf_Cliente/FindById", ReplyAction="http://tempuri.org/ICrudCommonServiceOf_Cliente/FindByIdResponse")]
        ConsoleApplication1.ProxyClientManagement.Cliente FindById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICrudCommonServiceOf_Cliente/FindById", ReplyAction="http://tempuri.org/ICrudCommonServiceOf_Cliente/FindByIdResponse")]
        System.Threading.Tasks.Task<ConsoleApplication1.ProxyClientManagement.Cliente> FindByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientManagementService/FindByEmail", ReplyAction="http://tempuri.org/IClientManagementService/FindByEmailResponse")]
        ConsoleApplication1.ProxyClientManagement.Cliente FindByEmail(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientManagementService/FindByEmail", ReplyAction="http://tempuri.org/IClientManagementService/FindByEmailResponse")]
        System.Threading.Tasks.Task<ConsoleApplication1.ProxyClientManagement.Cliente> FindByEmailAsync(string email);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IClientManagementServiceChannel : ConsoleApplication1.ProxyClientManagement.IClientManagementService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ClientManagementServiceClient : System.ServiceModel.ClientBase<ConsoleApplication1.ProxyClientManagement.IClientManagementService>, ConsoleApplication1.ProxyClientManagement.IClientManagementService {
        
        public ClientManagementServiceClient() {
        }
        
        public ClientManagementServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ClientManagementServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ClientManagementServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ClientManagementServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void Add(ConsoleApplication1.ProxyClientManagement.Cliente entity) {
            base.Channel.Add(entity);
        }
        
        public System.Threading.Tasks.Task AddAsync(ConsoleApplication1.ProxyClientManagement.Cliente entity) {
            return base.Channel.AddAsync(entity);
        }
        
        public void Update(ConsoleApplication1.ProxyClientManagement.Cliente entity) {
            base.Channel.Update(entity);
        }
        
        public System.Threading.Tasks.Task UpdateAsync(ConsoleApplication1.ProxyClientManagement.Cliente entity) {
            return base.Channel.UpdateAsync(entity);
        }
        
        public void Delete(ConsoleApplication1.ProxyClientManagement.Cliente entity) {
            base.Channel.Delete(entity);
        }
        
        public System.Threading.Tasks.Task DeleteAsync(ConsoleApplication1.ProxyClientManagement.Cliente entity) {
            return base.Channel.DeleteAsync(entity);
        }
        
        public System.Collections.Generic.List<ConsoleApplication1.ProxyClientManagement.Cliente> FindAll() {
            return base.Channel.FindAll();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<ConsoleApplication1.ProxyClientManagement.Cliente>> FindAllAsync() {
            return base.Channel.FindAllAsync();
        }
        
        public ConsoleApplication1.ProxyClientManagement.Cliente FindByGuid(string guid) {
            return base.Channel.FindByGuid(guid);
        }
        
        public System.Threading.Tasks.Task<ConsoleApplication1.ProxyClientManagement.Cliente> FindByGuidAsync(string guid) {
            return base.Channel.FindByGuidAsync(guid);
        }
        
        public ConsoleApplication1.ProxyClientManagement.Cliente FindById(int id) {
            return base.Channel.FindById(id);
        }
        
        public System.Threading.Tasks.Task<ConsoleApplication1.ProxyClientManagement.Cliente> FindByIdAsync(int id) {
            return base.Channel.FindByIdAsync(id);
        }
        
        public ConsoleApplication1.ProxyClientManagement.Cliente FindByEmail(string email) {
            return base.Channel.FindByEmail(email);
        }
        
        public System.Threading.Tasks.Task<ConsoleApplication1.ProxyClientManagement.Cliente> FindByEmailAsync(string email) {
            return base.Channel.FindByEmailAsync(email);
        }
    }
}
